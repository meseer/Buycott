import java.util.regex.Pattern

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}
apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

task('increaseVersionCode') << {
    def manifestFile = file("src/main/AndroidManifest.xml")
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(1)) + 1
    def manifestContent = matcher.replaceAll("versionCode=\"" + versionCode + "\"")

    def patternVersionNumber = Pattern.compile("versionName=\"(\\d+).(\\d+).(\\d+)\\S*\"")
    def matcherVersionNumber = patternVersionNumber.matcher(manifestContent)
    matcherVersionNumber.find()
    def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
    def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
    def buildStatus = android.defaultConfig.ext.buildStatus
    manifestContent = matcherVersionNumber.replaceAll("versionName=\"$majorVersion.$minorVersion." + versionCode + "-$buildStatus\"")

    manifestFile.write(manifestContent)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.0'

    defaultConfig {
        ext.buildStatus = "alpha" //todo: have different targets for alpha, beta, stable
        minSdkVersion 10
        targetSdkVersion 19
    }

    signingConfigs {
        release {
            storeFile file('keystore/boycott.jks')
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias 'boykott'
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            runProguard true
            debuggable false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'tools/proguard/proguard-boycott.txt'
            signingConfig signingConfigs.release
            jniDebugBuild false
            zipAlign true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:support-v4:+'
    compile 'com.crashlytics.android:crashlytics:1.+'
    //    

    
    compile files('libs/CWAC-LoaderEx.jar')
    compile project(':android-sqlite-asset-helper')
    compile project(':zxing-android-integration')
    //TODO: Investigate how to make this work, see http://x.co/3XxAL
    //    compile module('commonsguy:cwac-loaderex:0.7.3') {
    //        artifact {
    //            name = 'cwac-loaderex'
    //            extension = 'jar'
    //            type = 'jar'
    //            url = 'https://github.com/commonsguy/cwac-loaderex/releases/download/v0.7.3/CWAC-LoaderEx.jar'
    //        }
    //    }
}
